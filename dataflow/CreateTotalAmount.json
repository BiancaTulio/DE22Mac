{
	"name": "CreateTotalAmount",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "raw",
						"type": "DatasetReference"
					},
					"name": "SSISAssignmentData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "transformed_data",
						"type": "DatasetReference"
					},
					"name": "TransformedData",
					"rejectedDataLinkedService": {
						"referenceName": "AzureBlobStorageLab1",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "DerivedColumnTotalAmount"
				}
			],
			"scriptLines": [
				"source(output(",
				"          TransactionID as integer,",
				"          ProductID as integer,",
				"          ProductName as string,",
				"          Quantity as integer,",
				"          Price as float",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SSISAssignmentData",
				"SSISAssignmentData derive(TotalAmount = multiply(Quantity,Price)) ~> DerivedColumnTotalAmount",
				"DerivedColumnTotalAmount sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          TransactionID as string,",
				"          ProductID as string,",
				"          ProductName as string,",
				"          Quantity as string,",
				"          Price as string,",
				"          TotalAmount as string",
				"     ),",
				"     partitionFileNames:['TransformedData.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          TransactionID,",
				"          ProductID,",
				"          ProductName,",
				"          Quantity,",
				"          Price,",
				"          TotalAmount",
				"     ),",
				"     partitionBy('hash', 1)) ~> TransformedData"
			]
		}
	}
}